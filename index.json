[{"authors":null,"categories":null,"content":"Lecturer of Computer Science at HS Bund in Br√ºhl, Germany.\nFormer Software Engineer at REWE digital in Cologne and Recommind in Rheinbach.\n","date":-62135596800,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":-62135596800,"objectID":"1fee0630ebf691a0b4eb76303184b35c","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Lecturer of Computer Science at HS Bund in Br√ºhl, Germany.\nFormer Software Engineer at REWE digital in Cologne and Recommind in Rheinbach.","tags":null,"title":"Stefan Neuhaus","type":"authors"},{"authors":null,"categories":[],"content":"Everything screwed up üí© ‚ÄúNever change a running system‚Äù they say ‚Äî too bad it didn‚Äôt run anymore. üòÑ\nThe initial setup of this site was as follows:\n Repository #1 holding the site‚Äôs actual content and the Academic theme referenced as a Git submodule. Together this made the input files for the HUGO build. Local installation of HUGO. Repository #2 holding the files of the readily built site. This repository was configured to be hosted via GitHub Pages.  This was a perfect example of ‚Äúworks on my machine‚Äù. After buying my shiny new laptop in December 2021, installing the current version of HUGO and cloning repository #1, I observed that the site failed to build locally. Apparently there have been breaking changes in the meantime. The Academic theme has been reworked completely, meanwhile known as Wowchemy, and the issues were basically everywhere:\n Application of the theme changed to a whole new approach. Configuration parameters for the site changed, both core HUGO parameters and theme-specific ones. Front matter parameters changed. Site widgets changed.  Update time! üëª So the task was to restore my capability of publishing content ‚Äì though I haven‚Äôt been very productive in the past, I still want to be capable of doing so! üòâ This meant updating HUGO and the Academic theme, i.e. the technologies involved in producing the actual files of the site.\nSince the initial site launch HUGO has evolved towards a modularized system with HUGO Modules being the building blocks. Even a HUGO site is a module itself. And this is the path that Academic respectively Wowchemy followed: technically speaking Academic is no longer an actual HUGO theme which you apply to your HUGO project. Instead, the Academic functionality has been incorporated into Wowchemy, which is a HUGO Module serving as the main building block of the site. As you can imagine this transformation required some breaking changes. But the cool thing is: HUGO Modules (HUGO itself is written in Go) make use of Go Modules. In order to base your project on Wochemy you have to declare the dependency in the file go.mod in your site‚Äôs root directory:\nmodule github.com/wowchemy/starter-hugo-academic go 1.15 require github.com/wowchemy/wowchemy-hugo-modules/wowchemy/v5 v5.0.0-20220220173604-a956bdff0252 // indirect  I very much like this approach, as I am able to pinpoint the specific Wowchemy version in a transparent manner and do not have to rely on the somewhat cumbersome Git submodules anymore. But arguably this is a personal preference.\nBut after performing these updates, how did I fix my site‚Äôs build with all the breaking changes in the configuration? First I tried to fix compiler error by compiler error. As this turned out to be very time-consuming, and I had the fear of missing new Wowchemy features, I took the opposite approach: I took an example site as a base, hollowed it out, and added my poor existing content. This way I learned a lot about the new widgets and features.\nThough the documentation of Wowchemy is very informative in general, I stumbled across a handful of spots where it wasn‚Äôt up-to-date and listed outdated configuration parameters. This somehow diminished the otherwise good impression. But in my opinion, the fact that it is an actively maintained project weighs this out. In the end these were minor issues that could be easily worked around with a mix of Stack Overflow and inspecting the Wowchemy sources.\nAll things considered, I am very happy with Wowchemy. Site relaunch succeeded ‚Äî cheers! üçª\n","date":1645551819,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1645551819,"objectID":"c6341c9b2cb0cd5e102d00a1fd6a1c43","permalink":"https://stefanneuhaus.org/post/site-relaunch-2022-02-part1/","publishdate":"2022-02-22T18:43:39+01:00","relpermalink":"/post/site-relaunch-2022-02-part1/","section":"post","summary":"In part #1 of the posts on the site relaunch I will focus on the updates of HUGO and the Academic theme/Wowchemy. I will elaborate on how and why the integration of the Academic theme/Wowchemy with HUGO changed and what the implications are. I will describe how well this update worked for me.","tags":["HUGO","Wowchemy","Academic"],"title":"Site relaunch / part #1 üçª üòéü§òüèº","type":"post"},{"authors":null,"categories":null,"content":"Why?? For some time I‚Äôve had a strange need for a personal website, though I didn‚Äôt even know what content to share. The idea of having a blog felt a bit weird to me, as I was wondering for whom this might be meaningful. It took me a while, but meanwhile I think completely differently about this.\n  You do not have to write long papers that meet academic requirements. Small things can matter, and also imperfect ones. Admittedly far from being imperfect, Adam Bien‚Äôs Blog posts are always succinct and usually provide elegant and low complexity solutions to very concrete problems. It‚Äôs especially because of this brevity that they are easily consumable and very worth reading. Having the infrastructure already set up lowers the hurdles to publish even small content.\n  Other people and companies can gain insight into your interests and current projects. This can also be helpful to get in touch.\n  You do not know if you have fully understood a certain topic until you have explained it to someone or have written it down. In turn when blogging you ensure a proper understanding.\n  And at least with every blog post I will get some more practice with my English skills. üá∫üá∏\nHow? While doing a first bit of web research for appropriate technologies it seemed that WordPress is the most popular system for websites with blogs. However, I couldn‚Äôt bring myself to accept the downsides. Under no circumstances I wanted to host the system myself. Even though there are countless WordPress hosting providers you either have annoying limitations like ads on your site or a regular downtime. Or you have to pay for the service. Besides that WordPress felt like a complex and feature-blown system that is hard to tame, especially if you are relying on the installation of your hosting provider and cannot just apply a change. Migrating WordPress sites from one provider to another seems to be easily manageable by export/import functionality. Nevertheless, you still have some kind of vendor lock-in for your precious content.\nInspired by Trisha Gee‚Äôs blog post Converting Blogger to Markdown I came across text file based generators for static websites with basic Content Management Features. It‚Äôs the perfect fit! I can write the content in simple text files, e.g. in Markdown syntax. Definitely no vendor lock-in! And I can easily put them into a version control system. I use a GitHub repository for this. As I also have the local copy of the repository on my machine I feel sufficiently safe and even resign an additional backup. It takes a mere run of the generator to get the readily deployable website in the output directory. Upload this directory to the web hosting provider of your choice and you‚Äôre done. I chose GitHub Pages, simply because it‚Äôs free, I already have a GitHub account, and I like the deployment process of just doing a git commit/push to my repository.\nJekyll or Hugo? The two currently most popular static site generators are Jekyll and Hugo, at which I had a closer look. I took the following factors into account:\n Still being actively developed and maintained? Documentation Programming language, installation, and dependencies Performance Writing/development workflow Built-in features Extensibility and flexibility Theme support Syntax highlighting for code samples Support for mathematical notation in content  There is a recently published and very nice comparison by Chris Macrae, which I used as a starting point: Hugo or Jekyll? 6 Factors You Should Know. As my requirements are fairly low and both options are battle-tried mature tools, it is clear that either of them would definitely meet my requirements. Nevertheless, I did a comparison.\nSoon a tendency towards Hugo became apparent. Although my site is just a tiny one I cannot make a secret of the fact, that performance was one reason. And this is where Hugo beats the pants off Jekyll. I also liked the ease of installation, as Hugo is written in Go and comes as a self-contained binary. This seemed easier than fiddling around with the Ruby Gems of Jekyll. I have not been intimidated by the reputed steeper learning curve of Hugo‚Äôs template syntax but rather appreciated the rich feature set. This is purely subjective of course.\nLayout So I gave Hugo a try. First I had to decide if I wanted to write all layout templates from scratch or pick one of the numerous available themes. As I want to concentrate on the content and do not like to re-invent the wheel, I decided to use a theme as a basis. Besides that I am no UI/UX expert and it probably would take me a lot of time to come up with an appealing result. I did not agonize about this decision for a long time: If I do not like my current theme anymore, switching themes should be a piece of cake.\nAs a theme I chose Academic, mainly because of its clean design and as it is still being actively maintained. As a plus it ships with a couple of nice widgets that you can integrate into your site.\nUsing a theme is done by copying it to the themes/ ‚Ä¶","date":1526538900,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1645543694,"objectID":"e894551fe3497c19b3bc71110a2a406e","permalink":"https://stefanneuhaus.org/post/creating-my-website-with-hugo/","publishdate":"2018-05-17T08:35:00+02:00","relpermalink":"/post/creating-my-website-with-hugo/","section":"post","summary":"I will explain my reasons for having a blog and a personal website. I will illustrate the preceding decision process for choosing the appropriate technologies. I decided to go with the static site generator Hugo. It is a text file based Content Management System (CMS). I also compared Jekyll to Hugo. I will show some features of Hugo, like support for themes, syntax highlighting, and support for typesetting Math/LaTeX expressions in HTML sites. Finally, I will share my experiences so far with the technology.","tags":["HUGO","Academic","static site generator","CMS"],"title":"Creating my website with Hugo","type":"post"}]